version: "3.8"
services:
  ats_api:
    build:
      context: ../backend/src/
      dockerfile: Dockerfile
    container_name: "ats_api"
    restart: on-failure
    depends_on:
      - ats_elastic_server
      - ats_database
      - ats_mongodb
    ports:
      - "5050:80"
    networks:
      - backend
    env_file:
      - ../.env/ats_api.env

  ats_elastic_server:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.13.4"
    restart: on-failure
    container_name: 'ats_elastic_server'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 2g
    volumes:
      - esdata1:/usr/share/elasticsearch/data:rw
    environment: 
      - discovery.type=single-node
    ports:
      - 9200:9200
    networks:
      - backend

  ats_database:
    image: mcr.microsoft.com/azure-sql-edge
    container_name: "ats_database"
    ports:
      - 1433:1433
    networks:
      - backend
    env_file:
      - ../.env/ats_database.env
    volumes:
      - ats_database-data:/var/opt/mssql

  ats_mongodb:
    image: mongo
    container_name: ats_mongodb
    ports:
      - 27017:27017
    networks:
      - backend
    env_file:
      - ../.env/ats_mongodb.env
    volumes:
      - ats_mongodb-data:/data/db

  ats_frontend:
    build:
      context: ../frontend/ATS
      args:
        FRONTEND_CONFIGURATION: 'development'
    container_name: "ats_frontend"
    restart: on-failure
    ports:
      - 4200:80
    networks:
      - backend
      - frontend

volumes:
  ats_database-data: {}
  ats_mongodb-data: {}
  esdata1:
    driver: local

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge
